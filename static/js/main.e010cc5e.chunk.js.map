{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/comment-reducer.js","redux/GameOfThrones-reducer.js","redux/redux_store.js","components/comments/Comment.jsx","assets/45.svg","components/helpers/Loader.jsx","components/GameOfThrones/GameOfThrones.jsx","components/Paginator/Paginator.jsx","components/GameOfThrones/GameOfThronesContainer.jsx","logo.svg","components/header/Header.jsx","App.js","index.js","components/Paginator/Paginator.module.css","components/GameOfThrones/users.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","commentsAPI","packedData","post","IceAndFire","currentPage","pageSize","ADD_COMMENT","initialState","Comment","title","body","userId","isFetching","addComments","comment","type","commentreduser","state","action","TOGGLE_IS_FETCHING","SET_USERS","SET_CURRNET_PAGE","characters","totalItemsCount","setUsers","setCurrentPage","page","setIsFetching","usersReducer","reducers","combineReducers","form","formReducer","comments","GT","GameOfThronesReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","CommentsReduxForm","reduxForm","props","makeStyles","theme","button","margin","spacing","useStyles","className","onSubmit","handleSubmit","Field","component","name","connect","sendComments","dispath","a","values","Loader","src","loader","alt","GameOfThrones","s","GTContainer","map","i","container","card","border","avatar","stats","aliases","gender","culture","Link","href","url","variant","Button","color","onClick","GetCharacters","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","inner","pagin","btn","btn__prev","filter","p","cn","selectedPage","pageNumber","btn__next","GameOfThronesContainer","this","length","prevProps","prevState","React","PureComponent","data","Header","logo","to","activeClassName","App","path","render","MainApp","getState","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e010cc5e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst baseUrl = \"https://jsonplaceholder.typicode.com/\";\r\n\r\nlet instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n  headers: {},\r\n});\r\n\r\nexport const Posts = {\r\n  getPosts() {\r\n    return instance.get(`/users`);\r\n  },\r\n};\r\nexport const commentsAPI = {\r\n  sendComment(packedData) {\r\n    return instance.post(\r\n      `posts`,\r\n      { packedData },\r\n      { headers: { \"Content-type\": \"application/json; charset=UTF-8\" } }\r\n    );\r\n  },\r\n};\r\nexport const IceAndFire = {\r\n  people(currentPage, pageSize) {\r\n    return axios.get(\r\n      `https://www.anapioficeandfire.com/api/characters?page=${currentPage}&pageSize=${pageSize}`\r\n    );\r\n  },\r\n};\r\n","// import { commentsAPI, usersAPI } from \"../api/api\";\r\n\r\nimport { commentsAPI } from \"../api/api\";\r\n\r\nconst ADD_COMMENT = \"COMMENT/SET_COMMENT\";\r\n\r\nlet initialState = {\r\n  Comment: { title: \"\", body: \"\", userId: \"\" },\r\n  isFetching: false,\r\n};\r\n\r\nconst commentreduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_COMMENT: {\r\n      return { ...state, Comment: action.comment };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addComments = (comment) => {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n  };\r\n};\r\nexport const sendComments = (title, body, userId) => async (dispath) => {\r\n  // let packedData = JSON.stringify({\r\n  //   title,\r\n  //   body,\r\n  //   userId,\r\n  // });\r\n  let response = await commentsAPI.sendComment(title, body, userId);\r\n  let comment = { title, body, userId };\r\n  dispath(addComments(comment));\r\n  // let response = commentsAPI.sendComment(comment);\r\n};\r\n\r\nexport default commentreduser;\r\n","import { IceAndFire } from \"../api/api\";\r\n\r\nconst TOGGLE_IS_FETCHING = \"USERS/TOGGLE_IS_FETCHING\";\r\nconst SET_USERS = \"USERS/SET_USERS\";\r\nconst SET_CURRNET_PAGE = \"USERS/SET_CURRNET_PAGE\";\r\n\r\nlet initialState = {\r\n  characters: [],\r\n  pageSize: 5,\r\n  totalItemsCount: 2136,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case SET_USERS: {\r\n      return { ...state, characters: action.characters };\r\n    }\r\n    case SET_CURRNET_PAGE: {\r\n      return { ...state, currentPage: action.page };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const setUsers = (characters) => {\r\n  return {\r\n    type: SET_USERS,\r\n    characters,\r\n  };\r\n};\r\nexport const setCurrentPage = (page) => {\r\n  return {\r\n    type: SET_CURRNET_PAGE,\r\n    page,\r\n  };\r\n};\r\nexport const setIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\nexport const GetCharacters = (currentPage = 1, pageSize = 5) => async (\r\n  dispath\r\n) => {\r\n  dispath(setIsFetching(true));\r\n  let data = await IceAndFire.people(currentPage, pageSize);\r\n  dispath(setUsers(data.data));\r\n  dispath(setIsFetching(false));\r\n  dispath(setCurrentPage(currentPage));\r\n  // let response = commentsAPI.sendComment(comment);\r\n};\r\n\r\nexport default usersReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport commentreduser from \"./comment-reducer\";\r\nimport GameOfThronesReducer from \"./GameOfThrones-reducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nlet reducers = combineReducers({\r\n  form: formReducer,\r\n  comments: commentreduser,\r\n  GT: GameOfThronesReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { sendComments } from \"../../redux/comment-reducer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst CommentForm = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <form className=\"comForm\" onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"text\"\r\n          className=\"inputCome\"\r\n          name=\"title\"\r\n        ></Field>\r\n        <Field\r\n          component=\"textarea\"\r\n          type=\"text\"\r\n          className=\"inputCome\"\r\n          name=\"body\"\r\n        ></Field>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"text\"\r\n          className=\"inputCome\"\r\n          name=\"userId\"\r\n        ></Field>\r\n        {/* <Button variant=\"outlined\" color=\"primary\"></Button> */}\r\n        <button className=\"inputCome\"> send</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nconst CommentsReduxForm = reduxForm({\r\n  form: \"Comment\",\r\n})(CommentForm);\r\n\r\nconst Comment = (props) => {\r\n  const submit = (values) => {\r\n    props.sendComments(values);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <CommentsReduxForm onSubmit={submit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\nexport default compose(connect(mapStateToProps, { sendComments }))(Comment);\r\n","export default __webpack_public_path__ + \"static/media/45.6cf37826.svg\";","import React from \"react\";\nimport loader from \"../../assets/45.svg\";\nfunction Loader(props) {\n  return (\n    <div className=\"loader\">\n      <img src={loader} alt=\"\" />\n    </div>\n  );\n}\nexport default Loader;\n","import { Button, Link } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport s from \"./users.module.css\";\r\n\r\nlet GameOfThrones = (props) => {\r\n  return (\r\n    <>\r\n      <div className={s.GTContainer}>\r\n        {/* {\r\n        0:\r\n        aliases: [\"The Poetess\"]\r\n        allegiances: []\r\n        books: [\"https://www.anapioficeandfire.com/api/books/5\"]\r\n        born: \"\"\r\n        culture: \"Braavosi\"\r\n        died: \"\"\r\n        father: \"\"\r\n        gender: \"Female\"\r\n        mother: \"\"\r\n        name: \"\"\r\n        playedBy: [\"\"]\r\n        povBooks: []\r\n        spouse: \"\"\r\n        titles: [\"\"]\r\n        tvSeries: [\"\"]\r\n        url: \"https://www.anapioficeandfire.co\r\n      } */}\r\n        {props.characters.map((i) => {\r\n          return (\r\n            <div key={i + i.aliases[0]} className={s.container}>\r\n              <div className={s.card}>\r\n                <div className={s.border}></div>\r\n                <div className={s.avatar}>\r\n                  <img\r\n                    src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/199526/jonsnow.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className={s.stats}>\r\n                  <h2>{i.aliases[0]}</h2>\r\n                  <div>\r\n                    <p>gender:{i.gender}</p>\r\n                    <p>culture:{i.culture}</p>\r\n                    {i.name ? <p>Location: {i.name}</p> : null}\r\n\r\n                    <blockquote>\r\n                      “The only time a man can be brave is when he is afraid.”\r\n                    </blockquote>\r\n                    {/* <Link component=\"button\" variant=\"body2\" href={i.url}>\r\n                      <a href={i.url}>More info</a>\r\n                    </Link> */}\r\n                    <Link href={i.url} variant=\"body2\">\r\n                      More info\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.GetCharacters(props.currentPage + 1, props.pageSize);\r\n        }}\r\n      >\r\n        Next page\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameOfThrones;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = (\r\n  { totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 5 },\r\n  props\r\n) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={s.inner}>\r\n      <div className={s.pagin}>\r\n        <div className={s.btn}>\r\n          {portionNumber > 1 && (\r\n            <button\r\n              className={s.btn__prev}\r\n              onClick={() => {\r\n                setPortionNumber(portionNumber - 1);\r\n              }}\r\n            >\r\n              PREV\r\n            </button>\r\n          )}\r\n        </div>\r\n        {pages\r\n          .filter(\r\n            (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n          )\r\n          .map((p) => {\r\n            return (\r\n              <span\r\n                key={p}\r\n                onClick={() => {\r\n                  onPageChanged(p);\r\n                }}\r\n                className={cn(\r\n                  {\r\n                    [s.selectedPage]: currentPage === p,\r\n                  },\r\n                  s.pageNumber\r\n                )}\r\n              >\r\n                {p}\r\n              </span>\r\n            );\r\n          })}\r\n        <div className={s.btn}>\r\n          {portionCount > portionNumber && (\r\n            <button\r\n              className={s.btn__next}\r\n              onClick={() => {\r\n                setPortionNumber(portionNumber + 1);\r\n              }}\r\n            >\r\n              NEXT\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"../helpers/Loader\";\r\nimport GameOfThrones from \"./GameOfThrones\";\r\nimport {\r\n  GetCharacters,\r\n  setCurrentPage,\r\n} from \"../../redux/GameOfThrones-reducer\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass GameOfThronesContainer extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (this.props.characters.length === 0) {\r\n      this.props.GetCharacters(this.props.currentPage, this.props.pageSize);\r\n    } else {\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paginator\r\n          // currentPage={currentPage}\r\n          // onPageChanged={onPageChanged}\r\n          // totalItemsCount={totalItemsCount}\r\n          // pageSize={pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.props.GetCharacters}\r\n          totalItemsCount={this.props.totalItemsCount}\r\n          pageSize={this.props.pageSize}\r\n        />\r\n        {this.props.isFetching ? (\r\n          <Loader />\r\n        ) : (\r\n          <GameOfThrones\r\n            characters={this.props.characters}\r\n            currentPage={this.props.currentPage}\r\n            pageSize={this.props.pageSize}\r\n            GetCharacters={this.props.GetCharacters}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/* let mapSateToProps = (state) => {\r\n    return {\r\n      users: state.usersPage.users,\r\n      pageSize: state.usersPage.pageSize,\r\n      totalItemsCount : state.usersPage.totalItemsCount ,\r\n      currentPage: state.usersPage.currentPage,\r\n      isFetching: state.usersPage.isFetching,\r\n      followingInProgress: state.usersPage.followingInProgress,\r\n    };\r\n  };\r\n  */\r\nlet mapSateToProps = (state) => {\r\n  return {\r\n    characters: state.GT.characters,\r\n    currentPage: state.GT.currentPage,\r\n    isFetching: state.GT.isFetching,\r\n    pageSize: state.GT.pageSize,\r\n    totalItemsCount: state.GT.totalItemsCount,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapSateToProps, { GetCharacters, setCurrentPage })\r\n)(GameOfThronesContainer);\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"../../logo.svg\";\r\n\r\nlet Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <div className=\"header__container\">\r\n        <NavLink\r\n          className=\"btn btn-info\"\r\n          to=\"/Comment\"\r\n          activeClassName={\"ln_active\"}\r\n        >\r\n          form\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"btn btn-info\"\r\n          to=\"/Posts\"\r\n          activeClassName={\"ln_active\"}\r\n        >\r\n          Game Of Thrones\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./App.css\";\nimport Comment from \"./components/comments/Comment\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux_store\";\nimport GameOfThronesContainer from \"./components/GameOfThrones/GameOfThronesContainer\";\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n      <Switch>\n        <Route path=\"/Comment\" render={() => <Comment />} />\n        <Route path=\"/Posts\" render={() => <GameOfThronesContainer />} />\n      </Switch>\n    </div>\n  );\n}\nconst MainApp = (props) => {\n  return (\n    // <BrowserRouter basename={process.env.PUBLIC_URL}></BrowserRouter>\n    // <HashRouter></HashRouter>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/redux_store\";\nimport MainApp from \"./App\";\n\nlet renderEntireTree = (state) => {\n  ReactDOM.render(<MainApp /> ,document.getElementById(\"root\"));\n};\nrenderEntireTree(store.getState());\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected_page\":\"Paginator_selected_page__27pnF\",\"selected_pages\":\"Paginator_selected_pages__2KgpP\",\"inner\":\"Paginator_inner__2e8Cy\",\"pagin\":\"Paginator_pagin__3UazR\",\"paginator\":\"Paginator_paginator__3Ab8O\",\"pageNumber\":\"Paginator_pageNumber__2wLZi\",\"selectedPage\":\"Paginator_selectedPage__3FYbv\",\"btn__prev\":\"Paginator_btn__prev__Zefjq\",\"btn__next\":\"Paginator_btn__next__22QQq\",\"btn\":\"Paginator_btn__Wor6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"users_container__1F_9M\",\"card\":\"users_card__3-44Y\",\"avatar\":\"users_avatar__e_abV\",\"stats\":\"users_stats__3YlpJ\",\"GTContainer\":\"users_GTContainer__3UFRT\"};"],"sourceRoot":""}